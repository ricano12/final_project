<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
	<select id="selectOneAsMemNo" parameterType="Member" resultType="Member">
		SELECT
			MEM_NO as memNo,
			MEM_PWD as memPwd,
			MEM_POSITION as memPosition,
			DEPT_CODE as deptCode,
			MEM_NAME as memName,
			MEM_BIRTH as memBirth,
			MEM_GENDER as memGender,
			MEM_ADDRESS as memAddress,
			MEM_PHONE as memPhone,
			MEM_TELL as memTell,
			MEM_EMAIL as memEmail,
			MEM_PROFILE as memProfile,
			MEM_HOLIDAY_COUNT as memHolidayCount,
			MEM_JOIN_DATE as memJoinDate,
			MEM_RESIGN_YN as memResignYN,
			MEM_RESIGN_DATE as memResigndate,
			MEM_DEL_YN as memDelYN,
			MEM_DEL_DATE as memDelDate,
			MEM_RIGHT_CODE as memRightCode
		FROM member
		WHERE MEM_NO=#{memNo}
	</select>
	
	<select id="loginMember" parameterType="Member" resultType="Member">
		SELECT
			m.MEM_NO as memNo,
			m.MEM_PWD as memPwd,
			m.MEM_POSITION as memPosition,
			m.DEPT_CODE as deptCode,
			m.MEM_NAME as memName,
			m.MEM_BIRTH as memBirth,
			m.MEM_GENDER as memGender,
			m.MEM_ADDRESS as memAddress,
			m.MEM_PHONE as memPhone,
			m.MEM_TELL as memTell,
			m.MEM_EMAIL as memEmail,
			m.MEM_PROFILE as memProfile,
			m.MEM_HOLIDAY_COUNT as memHolidayCount,
			m.MEM_JOIN_DATE as memJoinDate,
			m.MEM_RESIGN_YN as memResignYN,
			m.MEM_RESIGN_DATE as memResigndate,
			m.MEM_DEL_YN as memDelYN,
			m.MEM_DEL_DATE as memDelDate,
			m.MEM_RIGHT_CODE as memRightCode,
			d.DEPT_NAME as deptName
		FROM member m left join department d on(m.dept_code=d.dept_code)
		WHERE m.MEM_NO=#{memNo} and m.MEM_PWD=#{memPwd}
	</select>
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 목록 / 사원 총 수 -->
	<select id="allMemberCount" resultType="int">
		SELECT COUNT(*) AS MEM_ALL_COUNT FROM MEMBER WHERE MEM_DEL_YN='N' AND MEM_RESIGN_YN='N'
	</select>
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 목록 / 전사원 리스트 -->
	<select id="allMemberList" parameterType="hashmap" resultType="Member">
		SELECT MEM_NO as memNo,
				MEM_PWD as memPwd,
				MEM_POSITION as memPosition,
				DEPT_CODE as deptCode,
				MEM_NAME as memName,
				MEM_BIRTH as memBirth,
				MEM_GENDER as memGender,
				MEM_ADDRESS as memAddress,
				MEM_PHONE as memPhone,
				MEM_TELL as memTell,
				MEM_EMAIL as memEmail,
				MEM_PROFILE as memProfile,
				MEM_HOLIDAY_COUNT as memHolidayCount,
				MEM_JOIN_DATE as memJoinDate,
				MEM_RESIGN_YN as memResignYN,
				MEM_RESIGN_DATE as memResigndate,
				MEM_DEL_YN as memDelYN,
				MEM_DEL_DATE as memDelDate,
				MEM_RIGHT_CODE as memRightCode,
                DEPT_NAME as deptName
		FROM (SELECT ROW_NUMBER()OVER(ORDER BY m.MEM_JOIN_DATE DESC) AS RNUM, m.*,d.DEPT_NAME FROM (SELECT * FROM MEMBER WHERE MEM_DEL_YN='N' AND MEM_RESIGN_YN='N') m LEFT JOIN DEPARTMENT d ON(m.DEPT_CODE=d.DEPT_CODE)) 
		WHERE RNUM BETWEEN ${start} AND ${end}
	</select>
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 - 사원 직위 변경 update -->
	<update id="changePosition" parameterType="hashmap">
		UPDATE MEMBER SET MEM_POSITION=#{memPosition} WHERE MEM_DEL_YN='N' AND MEM_NO=#{memNo}
	</update>
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 - 사원 삭제 update -->
	<update id="resignMember" parameterType="java.util.List">
		UPDATE MEMBER SET MEM_RESIGN_YN='Y', MEM_RESIGN_DATE=SYSTIMESTAMP
		<foreach collection="list" item="item" open="WHERE MEM_DEL_YN='N' AND (" close=")" separator="OR">
		  MEM_NO=#{item}
		</foreach>
	</update>
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 - 검색 select -->
	<select id="searchMember" parameterType="hashmap" resultType="Member">
		SELECT MEM_NO as memNo,
				MEM_PWD as memPwd,
				MEM_POSITION as memPosition,
				DEPT_CODE as deptCode,
				MEM_NAME as memName,
				MEM_BIRTH as memBirth,
				MEM_GENDER as memGender,
				MEM_ADDRESS as memAddress,
				MEM_PHONE as memPhone,
				MEM_TELL as memTell,
				MEM_EMAIL as memEmail,
				MEM_PROFILE as memProfile,
				MEM_HOLIDAY_COUNT as memHolidayCount,
				MEM_JOIN_DATE as memJoinDate,
				MEM_RESIGN_YN as memResignYN,
				MEM_RESIGN_DATE as memResigndate,
				MEM_DEL_YN as memDelYN,
				MEM_DEL_DATE as memDelDate,
				MEM_RIGHT_CODE as memRightCode,
                DEPT_NAME as deptName
		FROM (SELECT ROW_NUMBER()OVER(ORDER BY m.MEM_JOIN_DATE DESC) AS RNUM, m.*,d.DEPT_NAME FROM (SELECT * FROM MEMBER WHERE ${searchType} LIKE #{keyword} AND MEM_DEL_YN='N' AND MEM_RESIGN_YN='N') m LEFT JOIN DEPARTMENT d ON(m.DEPT_CODE=d.DEPT_CODE)) 
		WHERE RNUM BETWEEN ${start} AND ${end}
	</select>
		
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 - 사원 등록 / 사번 채번 -->
	<select id="choiceMemberNo" resultType="int">
		SELECT TO_CHAR(SYSDATE,'YYMM')||LPAD(MEMBER_SEQ.NEXTVAL,3,0) FROM DUAL
	</select>
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 - 사원 등록 / insert-->
	<insert id="signUpMember" parameterType="Member">
		INSERT INTO MEMBER VALUES(
			${memNo},
			'03AC674216F3E15C761EE1A5E255F067953623C8B388B4459E13F978D7C846F4',
			#{memPosition},
		<choose>
			<when test="deptCode != ''">#{deptCode},</when>
			<otherwise>NULL,</otherwise>
		</choose>
			#{memName},
			#{memBirth},
			#{memGender},
			#{memPhone},
			NULL,
			NULL,
			#{memProfile},
			DEFAULT,
			DEFAULT,
			DEFAULT,
			NULL,
			DEFAULT,
			NULL,
			NULL,
			#{memAddress},
			NULL
		)
	</insert>
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 - 사원 등록 / 학력 insert-->
	<insert id="insertAcademicAbility" parameterType="java.util.List">
		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM SYS.DUAL" separator=" "> 
		INTO ACADEMIC_ABILITY(MEM_NO,ACA_ENROLL_DATE,ACA_GRAD_DATE,ACA_SCHOOL_NAME,ACA_MAJOR_NAME,ACA_GRAD)
		VALUES (
			#{item.memNo},
		<choose>
			<when test="item.acaEnrollDate != null">#{item.acaEnrollDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="item.acaGradDate != null">#{item.acaGradDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="item.acaSchoolName != ''">#{item.acaSchoolName},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="item.acaMajorName != ''">#{item.acaMajorName},</when>
			<otherwise>NULL,</otherwise>
		</choose>	
		<choose>
			<when test="item.acaGrad != ''">#{item.acaGrad}</when>
			<otherwise>NULL</otherwise>
		</choose>
			
		)
		</foreach>
	</insert> 
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 - 사원 등록 / 자격증 insert-->
	<insert id="insertLicense" parameterType="java.util.List">
		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM SYS.DUAL" separator=" "> 
		INTO LICENSE(MEM_NO,LIC_DATE,LIC_NAME,LIC_ORIGIN)
		VALUES (
			#{item.memNo},
		<choose>
			<when test="item.licDate != null">#{item.licDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="item.licName != ''">#{item.licName},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="item.licOrigin != ''">#{item.licOrigin}</when>
			<otherwise>NULL</otherwise>
		</choose>
		)
		</foreach>
	</insert> 
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 - 사원 등록 / 경력 insert-->
	<insert id="insertCareer" parameterType="java.util.List">
		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM SYS.DUAL" separator=" "> 
		INTO CAREER(MEM_NO,CAR_JOIN_DATE,CAR_RESIGN_DATE,CAR_PLACE,CAR_POSITION,CAR_CONTENT)
		VALUES (
			#{item.memNo},
		<choose>
			<when test="item.carJoinDate != null">#{item.carJoinDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="item.carResignDate != null">#{item.carResignDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="item.carPlace != ''">#{item.carPlace},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="item.carPosition != ''">#{item.carPosition},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="item.carContent != ''">#{item.carContent}</when>
			<otherwise>NULL</otherwise>
		</choose>
		)
		</foreach>
	</insert> 
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 - 사원 등록 / 병력 insert-->
	<insert id="insertMilitary" parameterType="Military">
		INSERT INTO MILITARY 
		VALUES(
			${memNo},
		<choose>
			<when test="milServiceType != ''">#{milServiceType},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="milJoinDate != null">#{milJoinDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="milLeaveDate != null">#{milLeaveDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="milReason != ''">#{milReason}</when>
			<otherwise>NULL</otherwise>
		</choose>
		)
	</insert>
	
	<!-- 한명의 사원 정보를 가져오는 매퍼는 맨 위에 있음 -->
	<!-- BY 다빈 - 관리자탭(인사관리) - 부서 select -->
	<select id="deptAll" resultType="Department">
		SELECT DEPT_CODE AS deptCode, DEPT_NAME AS deptName, DEPT_DEL_YN AS deptDelYN FROM DEPARTMENT WHERE DEPT_DEL_YN='N'
	</select>
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 학력 select -->
	<select id="oneMemberInfoAca" parameterType="Member" resultType="AcademicAbility">
		SELECT 
			MEM_NO AS memNo, 
			ACA_ENROLL_DATE AS acaEnrollDate, 
			ACA_GRAD_DATE AS acaGradDate, 
			ACA_SCHOOL_NAME AS acaSchoolName, 
			ACA_MAJOR_NAME AS acaMajorName, 
			ACA_GRAD AS acaGrad 
		FROM ACADEMIC_ABILITY 
		WHERE MEM_NO=#{memNo}
	</select>
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 자격증 select -->
	<select id="oneMemberInfoLic" parameterType="Member" resultType="License">
		SELECT 
			MEM_NO AS memNo, 
			LIC_DATE AS licDate, 
			LIC_NAME AS licName, 
			LIC_ORIGIN AS licOrigin 
		FROM LICENSE 
		WHERE MEM_NO=#{memNo}
	</select>
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 경력 select -->
	<select id="oneMemberInfoCar" parameterType="Member" resultType="Career">
		SELECT 
			MEM_NO AS memNo, 
			CAR_JOIN_DATE AS carJoinDate, 
			CAR_RESIGN_DATE AS carResignDate, 
			CAR_PLACE AS carPlace, 
			CAR_POSITION AS carPosition, 
			CAR_CONTENT AS carContent 
		FROM CAREER 
		WHERE MEM_NO=#{memNo}
	</select>
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 병력 select -->
	<select id="oneMemberInfoMil" parameterType="Member" resultType="Military">
		SELECT 
			MEM_NO AS memNo, 
			MIL_SERVICE_TYPE AS milServiceType, 
			MIL_JOIN_DATE AS milJoinDate, 
			MIL_LEAVE_DATE AS milLeaveDate, 
			MIL_REASON AS milReason 
		FROM MILITARY 
		WHERE MEM_NO=#{memNo}
	</select>
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 정보 변경 delete -->
	<delete id="allDeleteMemberInfo" parameterType="hashmap">
		DELETE FROM ${tableName} WHERE MEM_NO=#{memNo}
	</delete>
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 정보 변경 insert -->
	<!-- 사원 등록할 때 작성한 insert 매퍼 사용 -->
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 조직도 select -->
	<select id="selectDeptList" resultType="Member">
		SELECT 
			d.DEPT_CODE AS deptCode, 
			d.DEPT_NAME AS deptName, 
			m.MEM_NO AS memNo, 
			m.MEM_NAME AS memName, 
			m.MEM_POSITION AS memPosition 
		FROM (select * from DEPARTMENT WHERE DEPT_DEL_YN='N') d FULL JOIN (SELECT * FROM MEMBER WHERE MEM_DEL_YN='N' AND MEM_RESIGN_YN='N') m ON(d.DEPT_CODE=m.DEPT_CODE) 
		ORDER BY d.DEPT_NAME
	</select>
	<!-- BY 다빈 - 관리자탭(인사관리) - 조직도 부서 이동 update -->
	<update id="changeDepartment" parameterType="hashmap">
		UPDATE MEMBER SET DEPT_CODE=#{deptCode} 
		<foreach collection="memNo" item="item" index="i" open="WHERE" separator="OR">
		 MEM_NO=#{item}
		</foreach>
	</update>
	<!-- BY 다빈 - 관리자탭(인사관리) - 조직도 부서 추가 insert -->
	<insert id="addDepartment" parameterType="hashmap">
		INSERT INTO DEPARTMENT VALUES(#{deptCode},#{deptName},'N')
	</insert>
	<!-- BY 다빈 - 관리자탭(인사관리) - 조직도 부서 이름 수정 update -->
	<update id="modifyDepartment" parameterType="hashmap">
		UPDATE DEPARTMENT SET DEPT_NAME=#{deptName} WHERE DEPT_CODE=#{deptCode} AND DEPT_DEL_YN='N'
	</update>
	<!-- BY 다빈 - 관리자탭(인사관리) - 조직도 부서 삭제 update -->
	<update id="deleteDepartment" parameterType="String">
		UPDATE DEPARTMENT SET DEPT_DEL_YN='Y' WHERE DEPT_CODE=#{deptCode}
	</update>
	<update id="updateMemDeptCode" parameterType="String">
		UPDATE MEMBER SET DEPT_CODE=NULL WHERE DEPT_CODE=#{deptCode}
	</update>
	
	<!-- BY 두진 - 프로젝트 게시물 작성자 리스트 -->
	<select id="selectProjectBoardMemberList" resultType="Member">
		 SELECT
			MEM_NO as memNo,
			MEM_PWD as memPwd,
			MEM_POSITION as memPosition,
			DEPT_CODE as deptCode,
			MEM_NAME as memName,
			MEM_BIRTH as memBirth,
			MEM_GENDER as memGender,
			MEM_ADDRESS as memAddress,
			MEM_PHONE as memPhone,
			MEM_TELL as memTell,
			MEM_EMAIL as memEmail,
			MEM_PROFILE as memProfile,
			MEM_HOLIDAY_COUNT as memHolidayCount,
			MEM_JOIN_DATE as memJoinDate,
			MEM_RESIGN_YN as memResignYN,
			MEM_RESIGN_DATE as memResigndate,
			MEM_DEL_YN as memDelYN,
			MEM_DEL_DATE as memDelDate,
			MEM_RIGHT_CODE as memRightCode
		FROM member
		WHERE MEM_NO IN (
        SELECT
			MEM_NO
		FROM PRO_BOARD
		WHERE DEL_YN='N' AND PRO_NO=#{proNo})
	</select>
	
	<!-- BY 두진 - 프로젝트 코드 작성자 리스트 -->
	<select id="selectProjectCodeMemberList" resultType="Member">
		 SELECT
			MEM_NO as memNo,
			MEM_PWD as memPwd,
			MEM_POSITION as memPosition,
			DEPT_CODE as deptCode,
			MEM_NAME as memName,
			MEM_BIRTH as memBirth,
			MEM_GENDER as memGender,
			MEM_ADDRESS as memAddress,
			MEM_PHONE as memPhone,
			MEM_TELL as memTell,
			MEM_EMAIL as memEmail,
			MEM_PROFILE as memProfile,
			MEM_HOLIDAY_COUNT as memHolidayCount,
			MEM_JOIN_DATE as memJoinDate,
			MEM_RESIGN_YN as memResignYN,
			MEM_RESIGN_DATE as memResigndate,
			MEM_DEL_YN as memDelYN,
			MEM_DEL_DATE as memDelDate,
			MEM_RIGHT_CODE as memRightCode
		FROM member
		WHERE MEM_NO IN (
        SELECT
			MEM_NO
		FROM PRO_CODE
		WHERE DEL_YN='N' AND PRO_NO=#{proNo})
	</select>
	
	<!-- BY 두진 - 프로젝트 할일 작성자 리스트 -->
	<select id="selectProjectWorkMemberList" resultType="Member">
		 SELECT
			MEM_NO as memNo,
			MEM_PWD as memPwd,
			MEM_POSITION as memPosition,
			DEPT_CODE as deptCode,
			MEM_NAME as memName,
			MEM_BIRTH as memBirth,
			MEM_GENDER as memGender,
			MEM_ADDRESS as memAddress,
			MEM_PHONE as memPhone,
			MEM_TELL as memTell,
			MEM_EMAIL as memEmail,
			MEM_PROFILE as memProfile,
			MEM_HOLIDAY_COUNT as memHolidayCount,
			MEM_JOIN_DATE as memJoinDate,
			MEM_RESIGN_YN as memResignYN,
			MEM_RESIGN_DATE as memResigndate,
			MEM_DEL_YN as memDelYN,
			MEM_DEL_DATE as memDelDate,
			MEM_RIGHT_CODE as memRightCode
		FROM member
		WHERE MEM_NO IN (
        SELECT
			MEM_NO
		FROM PRO_WORK
		WHERE DEL_YN='N' AND PRO_NO=#{proNo})
	</select>
	
	<!-- BY 두진 - 프로젝트 파일 작성자 리스트 -->
	<select id="selectProjectFileMemberList" resultType="Member">
		 SELECT
			MEM_NO as memNo,
			MEM_PWD as memPwd,
			MEM_POSITION as memPosition,
			DEPT_CODE as deptCode,
			MEM_NAME as memName,
			MEM_BIRTH as memBirth,
			MEM_GENDER as memGender,
			MEM_ADDRESS as memAddress,
			MEM_PHONE as memPhone,
			MEM_TELL as memTell,
			MEM_EMAIL as memEmail,
			MEM_PROFILE as memProfile,
			MEM_HOLIDAY_COUNT as memHolidayCount,
			MEM_JOIN_DATE as memJoinDate,
			MEM_RESIGN_YN as memResignYN,
			MEM_RESIGN_DATE as memResigndate,
			MEM_DEL_YN as memDelYN,
			MEM_DEL_DATE as memDelDate,
			MEM_RIGHT_CODE as memRightCode
		FROM member
		WHERE MEM_NO IN (
        SELECT
			MEM_NO
		FROM PRO_FILE
		WHERE DEL_YN='N' AND PRO_NO=#{proNo})
	</select>
	<!-- BY 두진 - 프로젝트 참가자 리스트 -->
	<select id="selectProjectMemberList" resultType="Member">
	   SELECT
			MEM_NO as memNo,
			MEM_PWD as memPwd,
			MEM_POSITION as memPosition,
			DEPT_CODE as deptCode,
			MEM_NAME as memName,
			MEM_BIRTH as memBirth,
			MEM_GENDER as memGender,
			MEM_ADDRESS as memAddress,
			MEM_PHONE as memPhone,
			MEM_TELL as memTell,
			MEM_EMAIL as memEmail,
			MEM_PROFILE as memProfile,
			MEM_HOLIDAY_COUNT as memHolidayCount,
			MEM_JOIN_DATE as memJoinDate,
			MEM_RESIGN_YN as memResignYN,
			MEM_RESIGN_DATE as memResigndate,
			MEM_DEL_YN as memDelYN,
			MEM_DEL_DATE as memDelDate,
			MEM_RIGHT_CODE as memRightCode
		FROM member
		WHERE MEM_NO IN (
        SELECT
			MEM_NO
		FROM PRO_MEMBER
		WHERE DEL_YN='N' AND PRO_NO=#{proNo})
		ORDER BY ROWID DESC
	</select>
	
	<!-- BY 진원 - 개인 근태기록 조회 -->
	<select id="selectAttendanceMember" resultType="Attendance">
		SELECT
			MEM_NO as memNo,
			START_DATE as startDate,
			END_DATE as endDate,
			TODAY_WORK as todayWork
		FROM ATTENDANCE_BOOK
		WHERE MEM_NO=#{memNo}
		AND (TO_CHAR(END_DATE, 'YYYY-MM-DD') = TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD')
			OR END_DATE IS NULL)
	</select>
	
	<!-- BY 진원 - 개인 출근 기록 -->
	<insert id="insertAttendanceMember">
		INSERT INTO ATTENDANCE_BOOK VALUES(#{memNo},SYSTIMESTAMP,NULL,NULL,SYSDATE)
	</insert>
	
	<!-- BY 진원 - 개인 퇴근 기록 -->
	<update id="updateAttendanceMember" parameterType="Attendance">
		UPDATE ATTENDANCE_BOOK SET END_DATE=SYSTIMESTAMP, TODAY_WORK=#{todayWork}
		WHERE MEM_NO=#{memNo}
		AND (TO_CHAR(START_DATE, 'YYYY-MM-DD') = TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD')
			OR END_DATE IS NULL)
	</update>
	
	<!-- BY 진원 - 부서 목록 -->
	<select id="selectAllDepartment" resultType="Department">
		SELECT
			DEPT_CODE AS deptCode,
			DEPT_NAME AS deptName,
			DEPT_DEL_YN AS deptDelYN
		FROM DEPARTMENT
		WHERE DEPT_DEL_YN='N'
		ORDER BY DEPT_NAME
	</select>
	<!-- BY 다빈 - 부서 목록(삭제된것 포함) -->
	<select id="selectAllDeptCode" resultType="Department">
		SELECT
			DEPT_CODE AS deptCode,
			DEPT_NAME AS deptName,
			DEPT_DEL_YN AS deptDelYN
		FROM DEPARTMENT
	</select>

	<!-- BY 두진 - 전체 멤버 리스트 -->
	<select id="selectAllMemberList" resultType="Member">
	   SELECT
			MEM_NO as memNo,
			MEM_POSITION as memPosition,
			DEPT_CODE as deptCode,
			MEM_NAME as memName,
			MEM_PROFILE as memProfile
		FROM member
		WHERE MEM_DEL_YN='N'
	</select>
</mapper>
